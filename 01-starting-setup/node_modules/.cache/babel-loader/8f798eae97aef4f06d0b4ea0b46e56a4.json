{"ast":null,"code":"var _jsxFileName = \"C:\\\\js\\\\01Udemy\\\\Maximilian-React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  //console.log(props.items[0].date.getFullYear());\n  const [filteredYear, SetFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    SetFilteredYear(selectedYear);\n    console.log(filteredYear, props.items[0].date.getFullYear().toString());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), props.items.filter(item => item.date.getFullYear().toString().includes({\n        filteredYear\n      })).map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"i2gaGf2YZsXjvm688n16Hd12BUc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/js/01Udemy/Maximilian-React/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","SetFilteredYear","filterChangeHandler","selectedYear","console","log","items","date","getFullYear","toString","filter","item","includes","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAA0BD,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeC,IAAf,CAAoBC,WAApB,GAAkCC,QAAlC,EAA1B;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAET,YADZ;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGH,KAAK,CAACO,KAAN,CACEI,MADF,CACUC,IAAD,IACNA,IAAI,CAACJ,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,GAAmCG,QAAnC,CAA4C;AAAEZ,QAAAA;AAAF,OAA5C,CAFH,EAIEa,GAJF,CAIOC,OAAD,iBACH,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,QAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,QAAA,IAAI,EAAEF,OAAO,CAACP;AAJhB,SACOO,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,cALH,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA5CQnB,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n  //console.log(props.items[0].date.getFullYear());\r\n  const [filteredYear, SetFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    SetFilteredYear(selectedYear);\r\n    console.log(filteredYear, props.items[0].date.getFullYear().toString());\r\n  };\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        {props.items\r\n          .filter((item) =>\r\n            item.date.getFullYear().toString().includes({ filteredYear })\r\n          )\r\n          .map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))}\r\n        {/* <ExpenseItem\r\n          title={props.items[0].title}\r\n          amount={props.items[0].amount}\r\n          date={props.items[0].date}\r\n        />\r\n        <ExpenseItem\r\n          title={props.items[1].title}\r\n          amount={props.items[1].amount}\r\n          date={props.items[1].date}\r\n        />\r\n        <ExpenseItem\r\n          title={props.items[2].title}\r\n          amount={props.items[2].amount}\r\n          date={props.items[2].date}\r\n        /> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}